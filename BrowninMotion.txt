package Start;
import java.util.*;
import java.io.*;
import java.awt.*;
import java.awt.event.*;
import javax.swing.*;
import java.awt.image.*;
import java.awt.image.BufferedImage.*;
import java.awt.Color.*;
import java.awt.Graphics.*;
import java.awt.Graphics2D.*;
import java.awt.BasicStroke.*;
import java.awt.RenderingHints.*;
public class BrowninMotion {
public static final int W=640;
public static final int H=480;
public static void main(String []args) {
	JFrame thejf=new JFrame("BrowninMotion");
	Leader theleader =new Leader();
	Thread thethread =new Thread(theleader);
	
	thejf.setLocationRelativeTo(null);
	thejf.setResizable(false);
	thejf.setSize(W,H);
	
	thejf.add(theleader);
	thethread.start();
	
	thejf.setDefaultCloseOperation(JFrame.EXIT_ON_CLOSE);
	thejf.setVisible(true);
}
}
class Leader extends JPanel implements Runnable{
	private boolean Running;
	private BufferedImage image;
	private Graphics2D g;
	
	BALL theball;
	public Leader(){
		init();
	}
	public void run() {
		while(Running) {
			update();
			draw();
			repaint();
			try {
				Thread.sleep(10);
			}
			catch(Exception e) {
				e.printStackTrace();
			}
		}
	}
	public void init() {
		theball=new BALL();
		Running=true;
		image=new BufferedImage(BrowninMotion.W,BrowninMotion.H,BufferedImage.TYPE_INT_RGB);
		g=(Graphics2D) image.getGraphics();
		g.setRenderingHint(RenderingHints.KEY_ANTIALIASING,RenderingHints.VALUE_ANTIALIAS_ON);
	}
	public void update() {
		theball.update();
	}
	public void draw() {
		
		g.setColor(Color.white);
		g.fillRect(0, 0,BrowninMotion.W,BrowninMotion.H);
		theball.draw(g);
	}
	public void paintComponent(Graphics g) {
		Graphics2D g2=(Graphics2D)g;
		
		g2.drawImage(image, 0, 0,BrowninMotion.W,BrowninMotion.H,null);
		g2.dispose();
	}
	

}
class BALL{
	private int x,y,dx,dy;
	private int ballsize=30;
	BALL(){
		x=200;
		y=200;
		dx=1;
		dy=3;
	}
	public void update() {
		setPosition();
	}
	public void setPosition() {
		x+=dx;
		y+=dy;
		
		if(x<0) {dx=-dx;}
		if(y<0) {dy=-dy;}
		if(x>BrowninMotion.W-ballsize) {dx=-dx;}	
		if(y>BrowninMotion.H-ballsize) {dy=-dy;}	
	}
	public void draw(Graphics2D g) {
		g.setColor(Color.red);
		g.setStroke(new BasicStroke(4));
		g.drawOval(x,y,ballsize,ballsize);
	}
	
}
